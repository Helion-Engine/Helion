<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <UseWindowsForms>false</UseWindowsForms>
    <RootNamespace>Helion.Client</RootNamespace>

    <AssemblyName>Helion</AssemblyName>
    <ApplicationIcon>helion.ico</ApplicationIcon>

    <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
  </PropertyGroup>

  <PropertyGroup Condition="'$(SelfContainedRelease)' == 'true'">
    <SelfContained>True</SelfContained>
    <PublishSingleFile>True</PublishSingleFile>
    <PublishReadyToRun>True</PublishReadyToRun>
    <EnableCompressionInSingleFile>true</EnableCompressionInSingleFile>
  </PropertyGroup>

  <PropertyGroup Condition="'$(AOT)' == 'true'">
    <PublishAot>True</PublishAot>
    <OptimizationPreference>Speed</OptimizationPreference>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Debug'">
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Release'">
    <WarningLevel>0</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="Unmanaged\**\*" />
    <None Remove="SoundFonts\*" />

    <Content Include="helion.ico" Link="%(Filename)%(Extension)" CopyToOutputDirectory="Never" />
    <Content Include="$(HelionRootDir)Assets\Documentation\*" Link="%(Filename)%(Extension)" CopyToOutputDirectory="PreserveNewest" />
    <Content Include="$(ProjectDir)SoundFonts\*" Link="SoundFonts\%(Filename)%(Extension)" CopyToOutputDirectory="PreserveNewest" />

    <!-- FluidSynth and ZMusic native libs -->
    <Content Include="$(ProjectDir)Unmanaged\**\*" Link="runtimes\%(RecursiveDir)\native\%(Filename)%(Extension)" Condition="'$(RuntimeIdentifier)' == ''" CopyToOutputDirectory="PreserveNewest" />
    <Content Include="$(ProjectDir)Unmanaged\$(RuntimeIdentifier)\*" Link="%(Filename)%(Extension)" Condition="'$(RuntimeIdentifier)' != ''" CopyToOutputDirectory="PreserveNewest" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="OpenAL.Soft" Version="1.19.1" />
    <PackageReference Include="OpenTK" Version="4.7.4" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Core\Core.csproj" />
    <ProjectReference Include="..\ZMusic\ZMusicWrapper\ZMusicWrapper.csproj" />
    <ProjectReference Include="..\NFluidsynth\NFluidsynth.csproj" />
  </ItemGroup>

  <Target Name="SetPublishDir" BeforeTargets="Build">
    <PropertyGroup>
      <PublishDir Condition="'$(SelfContainedRelease)' == 'true'">$(HelionRootDir)\Publish\$(RuntimeIdentifier)_SelfContained\</PublishDir>
      <PublishDir Condition="'$(AOT)' == 'true'">$(HelionRootDir)\Publish\$(RuntimeIdentifier)_AOT\</PublishDir>
      <PublishDir Condition="'$(SelfContainedRelease)' != 'true' AND '$(AOT)' != 'true'">$(HelionRootDir)\Publish\$(RuntimeIdentifier)\</PublishDir>
    </PropertyGroup>
  </Target>

  <Target Name="GetAssetsIncludeFiles">
    <ItemGroup>
      <AssetSources Include="$(HelionRootDir)Assets\Assets\**\*" />
    </ItemGroup>
  </Target>

  <Target Name="MakeAssetsFile" AfterTargets="Build" DependsOnTargets="GetAssetsIncludeFiles" Inputs="@(AssetSources)" Outputs="$(TargetDir)\assets.pk3">
    <ZipDirectory SourceDirectory="$(HelionRootDir)Assets\Assets" DestinationFile="$(TargetDir)\assets.pk3" Overwrite="true" />
  </Target>

  <Target Name="CopyAssetsFileAfterPublish" AfterTargets="Publish" Inputs="$(TargetDir)\assets.pk3" Outputs="$(PublishDir)\assets.pk3">
    <Copy SourceFiles="$(TargetDir)\assets.pk3" DestinationFiles="$(PublishDir)\assets.pk3" SkipUnchangedFiles="true" />
  </Target>

  <Target Name="GetFilesForPostPublishCopy" DependsOnTargets="PublishItemsOutputGroup">
    <ItemGroup>
      <PostPublishFiles Include="@(Content)" Destination="$(PublishDir)%(Link)" Condition="'%(CopyToOutputDirectory)' != 'Never'" />
      <!-- Deal with an annoying case where redoing a single-file publish deletes openal32.dll and some other native files -->
      <PostPublishFiles Include="@(NativeCopyLocalItems)" Destination="$(PublishDir)%(NativeCopyLocalItems.DestinationSubPath)" />
    </ItemGroup>
  </Target>

  <Target Name="EnsureContentFilesAfterPublish" AfterTargets="Publish" DependsOnTargets="GetFilesForPostPublishCopy" Inputs="@(PostPublishFiles)" Outputs="@(PostPublishFiles -> '%(Destination)')">
    <Copy SourceFiles="@(PostPublishFiles)" DestinationFiles="%(Destination)" SkipUnchangedFiles="true" />
  </Target>
</Project>
